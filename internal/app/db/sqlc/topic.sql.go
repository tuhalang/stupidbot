// Code generated by sqlc. DO NOT EDIT.
// source: topic.sql

package db

import (
	"context"
)

const listTopics = `-- name: ListTopics :many
SELECT topic_name, description, document_link, subject_code, image, order_number, topic_code
FROM topic
WHERE subject_code = $1
ORDER BY order_number
`

func (q *Queries) ListTopics(ctx context.Context, subjectCode string) ([]Topic, error) {
	rows, err := q.db.QueryContext(ctx, listTopics, subjectCode)
	if err != nil {
		return nil, err
	}
	defer rows.Close()
	var items []Topic
	for rows.Next() {
		var i Topic
		if err := rows.Scan(
			&i.TopicName,
			&i.Description,
			&i.DocumentLink,
			&i.SubjectCode,
			&i.Image,
			&i.OrderNumber,
			&i.TopicCode,
		); err != nil {
			return nil, err
		}
		items = append(items, i)
	}
	if err := rows.Close(); err != nil {
		return nil, err
	}
	if err := rows.Err(); err != nil {
		return nil, err
	}
	return items, nil
}
